name: Deploy to GitHub Pages

on:
  workflow_call:
    inputs:
      full-image-name:
        required: true
        type: string
      # config-name:
      #   required: true
      #   type: string

concurrency: preview-${{ github.ref }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:

      # https://github.com/Azure/login?tab=readme-ov-file#login-with-openid-connect-oidc-recommended
      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Download Analysis Outputs
        id: download-analysis-outputs
        uses: RMI-PACTA/actions/actions/azure/blob-copy@main
        with:
          source: https://pactadatadev.blob.core.windows.net/ghactions-workflow-pacta-results/main/latest/full_params_2023Q4/analysis_output_dir
          destination: analysis_output_dir

      - name: Download Benchmarks
        id: download-benchmarks
        uses: RMI-PACTA/actions/actions/azure/blob-copy@main
        with:
          source: https://pactadatadev.blob.core.windows.net/benchmarks-webapp/2023Q4/2023Q4_20240529T002355Z
          destination: benchmarks_dir

      - name: Create Output Directories
        run: |
          mkdir -p dashboard_output_dir/data

      - name: Run Docker Image
        env:
          FULL_IMAGE_NAME: ${{ inputs.full-image-name }}
          WORKSPACE: ${{ github.workspace }}
          PARAMETERS: ""
          # PARAMETERS: ${{ steps.prepare.outputs.parameters }}
          ANALYSIS_OUTPUT_DIR: "analysis_output_dir"
          BENCHMARKS_DIR: "benchmarks_dir"
          # PACTA_DATA_DIR: pacta-data
          # PORTFOLIO_DIR: tests/portfolios
          DASHBOARD_DATA_DIR: "dashboard_output_dir/data"
          DASHBOARD_OUTPUT_DIR: "dashboard_output_dir"
        run: |

          docker run \
          --network none \
          --env LOG_LEVEL=TRACE \
          --env ANALYSIS_OUTPUT_DIR="/mnt/analysis_output_dir" \
          --env BENCHMARKS_DIR="/mnt/benchmarks_dir" \
          --env DASHBOARD_DATA_DIR="/mnt/dashboard_output_dir/data" \
          --env DASHBOARD_OUTPUT_DIR="/mnt/dashboard_output_dir" \
          --mount type=bind,readonly,source=${WORKSPACE}/${BENCHMARKS_DIR},target=/mnt/benchmarks_dir \
          --mount type=bind,source=${WORKSPACE}/${ANALYSIS_OUTPUT_DIR},target=/mnt/analysis_output_dir \
          --mount type=bind,source=${WORKSPACE}/${DASHBOARD_OUTPUT_DIR},target=/mnt/dashboard_output_dir \
          --mount type=bind,source=${WORKSPACE}/${DASHBOARD_DATA_DIR},target=/mnt/dashboard_output_dir/data \
          $FULL_IMAGE_NAME \
          "$PARAMETERS"

      - name: List outputs
        run: |
          ls -lR dashboard_output_dir

      - name: Add nojekyll file
        if: github.event.action != 'closed'
        run: touch dashboard_output_dir/.nojekyll

      - name: ðŸš€ Deploy main page
        if: ${{ github.event_name == 'push' }}
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: build # The folder the action should deploy.
          clean: true
          force: false
          clean-exclude: |
            .nojekyll
            pr-preview/

      - name: ðŸ›¸ Deploy PR preview
        if: ${{ github.event_name == 'pull_request' }}
        uses: rossjrw/pr-preview-action@v1
        with:
          source-dir: build
          preview-branch: gh-pages
          umbrella-dir: pr-preview
          action: auto
